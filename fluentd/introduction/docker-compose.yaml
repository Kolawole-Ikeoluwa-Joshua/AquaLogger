version: "3"
services:
  fluentd:
    container_name: fluentd
    user: root
    build:
      context: .
    image: fluentd
    volumes:
      - /var/lib/docker/containers:/fluentd/log/containers
      - ./file:/fluentd/log/files/
      - ./configurations:/fluentd/etc/
      - ./logs:/output/
    logging:
      driver: "local"
    networks:
      - logging-network
    #restart: always

  http-myapp:
    container_name: http-myapp
    image: alpine:latest
    volumes:
      - ./http-file:/app
    command: sh -c "apk add --no-cache curl && tail -f /dev/null"
    # command:
    #  [
    #    /bin/sh,
    #    -c,
    #    "apk add --no-cache curl && chmod +x /app/app.sh && ./app/app.sh",
    #  ]
    networks:
      - logging-network
    #restart: always

  file-myapp:
    container_name: file-myapp
    image: alpine
    volumes:
      - ./file:/app
    command: [/bin/sh, -c, "chmod +x /app/app.sh && ./app/app.sh"]
    networks:
      - logging-network
    #restart: always

  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      #- discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - logging-network
    #restart: always

  kibana:
    image: kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - logging-network
    #restart: always

networks:
  logging-network:
    driver: bridge
